"""
Esse programa faz parte do Trabalho de Redes de Computadores II 
"""
__author__ = "Gabriel Hishida and Allan Cedric"

import socket

HOST = "127.0.0.1"  # The server's hostname or IP address
PORT = 65010  # The port used by the server cache

def main():

    # Create the client socket
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

        # Try to connect to Cache Server
        try:
            s.connect((HOST, PORT))
        except ConnectionRefusedError:
            s.close()
            print("Error: Could not connect to CACHE server")
            exit()
        
        print(f"Connected to CACHE server!")


        print("Usage: >>> req temp [server_name]")
        print(f"Available servers: 'atacama , 'antartida' and 'saara'")


        # Client input
        while True:
            req = input(">>> ")

            data = req.encode('UTF-8') # Encode data

            s.sendall(data) # Send encoded data through the socket

            s.settimeout(1.0) # Timeout (1 second)

            # Try to wait for an answer from Cache Server
            try:
                data = s.recv(1024) # Received data from Cache Server (buffer 1024 bytes)
                data = data.decode("utf-8") # Decode data
                
                if data and (not data.startswith("err:")): # If it's not an error
                    # data = eval(data)
                    print(f"{req}: {data}")
                else:
                    print(data)

            except socket.timeout:
                print("No data was received from cache.")
            except:
                s.close()



if __name__ == '__main__':
    main()